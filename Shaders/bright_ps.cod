//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CBPerBloom
// {
//
//   float threshold;                   // Offset:    0 Size:     4
//   float dummy1;                      // Offset:    4 Size:     4 [unused]
//   float dummy2;                      // Offset:    8 Size:     4 [unused]
//   float dummy3;                      // Offset:   12 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// sampler_states[3]                 sampler      NA          NA             s3      1 
// texture_map                       texture  float4          2d             t0      1 
// CBPerBloom                        cbuffer      NA          NA            cb3      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB3[1], immediateIndexed
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 2
//
// Initial variable locations:
//   v0.x <- pin.position.x; v0.y <- pin.position.y; v0.z <- pin.position.z; v0.w <- pin.position.w; 
//   v1.x <- pin.texcoord.x; v1.y <- pin.texcoord.y; 
//   o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z; o0.w <- <main return value>.w
//
#line 32 "D:\個人製作\bright_ps.hlsl"
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v1.xyxx, t0.xyzw, s3  // r0.x <- color.x; r0.y <- color.y; r0.z <- color.z; r0.w <- color.w

#line 37
mul r1.x, r0.x, l(0.299000)
mul r1.y, r0.y, l(0.587000)
add r1.x, r1.y, r1.x
mul r1.y, r0.z, l(0.114000)
add r1.xyz, r1.yyyy, r1.xxxx  // r1.x <- tgray.x; r1.y <- tgray.y; r1.z <- tgray.z

#line 41
dp3 r1.x, r1.xyzx, r1.xyzx
lt r1.x, cb3[0].x, r1.x
if_nz r1.x

#line 42
  mov o0.xyzw, r0.xyzw
  ret 
endif 

#line 44
itof r0.xyzw, l(0, 0, 0, 0)

#line 46
mov o0.xyzw, r0.xyzw  // o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z; o0.w <- <main return value>.w
ret 
// Approximately 15 instruction slots used

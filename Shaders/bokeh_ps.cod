//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// sampler_states[2]                 sampler      NA          NA             s2      1 
// texture_map                       texture  float4          2d             t0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { 0.062500, 0, 0, 0},
                              { 0.125000, 0, 0, 0},
                              { 0.062500, 0, 0, 0},
                              { 0.125000, 0, 0, 0},
                              { 0.250000, 0, 0, 0},
                              { 0.125000, 0, 0, 0},
                              { 0.062500, 0, 0, 0},
                              { 0.125000, 0, 0, 0},
                              { 0.062500, 0, 0, 0} }
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 5
sample_indexable(texture2d)(float,float,float,float) r0.x, v1.xyxx, t0.wxyz, s2
resinfo_indexable(texture2d)(float,float,float,float)_uint r0.yz, l(0), t0.zxyw
utof r0.yz, r0.yyzy
div r0.yz, l(1.000000, 1.000000, 1.000000, 1.000000), r0.yyzy
mov r0.w, l(0)
mov r1.xyzw, l(0,0,0,-1)
loop 
  ilt r2.x, l(1), r1.w
  breakc_nz r2.x
  itof r2.x, r1.w
  mul r2.y, r0.z, r2.x
  mov r3.xyz, r1.xyzx
  mov r2.z, r0.w
  mov r2.w, l(-1)
  loop 
    ilt r3.w, l(1), r2.w
    breakc_nz r3.w
    itof r3.w, r2.w
    mul r2.x, r0.y, r3.w
    add r4.xy, r2.xyxx, v1.xyxx
    sample_indexable(texture2d)(float,float,float,float) r4.xyz, r4.xyxx, t0.xyzw, s2
    mad r3.xyz, r4.xyzx, icb[r2.z + 0].xxxx, r3.xyzx
    iadd r2.zw, r2.zzzw, l(0, 0, 1, 1)
  endloop 
  mov r1.xyz, r3.xyzx
  mov r0.w, r2.z
  iadd r1.w, r1.w, l(1)
endloop 
mov o0.xyz, r1.xyzx
mov o0.w, r0.x
ret 
// Approximately 31 instruction slots used

//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// Resource bind info for particle
// {
//
//   struct ParticleData
//   {
//       
//       float3 pos;                    // Offset:    0
//       float2 size;                   // Offset:   12
//       float2 sizeA;                  // Offset:   20
//       float3 posV;                   // Offset:   28
//       float3 posA;                   // Offset:   40
//       float3 color;                  // Offset:   52
//       float alpha;                   // Offset:   64
//       float timer;                   // Offset:   68
//       float animeTimer;              // Offset:   72
//       float elapsedTime;             // Offset:   76
//       int type;                      // Offset:   80
//
//   } $Element;                        // Offset:    0 Size:    84
//
// }
//
// Resource bind info for BufOut
// {
//
//   struct VERTEX
//   {
//       
//       float3 Pos;                    // Offset:    0
//       float3 Normal;                 // Offset:   12
//       float2 Tex;                    // Offset:   24
//       float4 Color;                  // Offset:   32
//       float4 Param;                  // Offset:   48
//
//   } $Element;                        // Offset:    0 Size:    64
//
// }
//
// Resource bind info for CpuBufOut
// {
//
//   struct ParticleData
//   {
//       
//       float3 pos;                    // Offset:    0
//       float2 size;                   // Offset:   12
//       float2 sizeA;                  // Offset:   20
//       float3 posV;                   // Offset:   28
//       float3 posA;                   // Offset:   40
//       float3 color;                  // Offset:   52
//       float alpha;                   // Offset:   64
//       float timer;                   // Offset:   68
//       float animeTimer;              // Offset:   72
//       float elapsedTime;             // Offset:   76
//       int type;                      // Offset:   80
//
//   } $Element;                        // Offset:    0 Size:    84
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// particle                          texture  struct         r/o             t0      1 
// BufOut                                UAV  struct         r/w             u0      1 
// CpuBufOut                             UAV  struct         r/w             u1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_resource_structured t0, 84
dcl_uav_structured u0, 64
dcl_uav_structured u1, 84
dcl_input vThreadID.x
dcl_temps 6
dcl_thread_group 100, 1, 1
ld_structured_indexable(structured_buffer, stride=84)(mixed,mixed,mixed,mixed) r0.xyzw, vThreadID.x, l(0), t0.wxyz
ld_structured_indexable(structured_buffer, stride=84)(mixed,mixed,mixed,mixed) r1.xy, vThreadID.x, l(76), t0.xyxx
ld_structured_indexable(structured_buffer, stride=84)(mixed,mixed,mixed,mixed) r2.xyz, vThreadID.x, l(40), t0.xyzx
ld_structured_indexable(structured_buffer, stride=84)(mixed,mixed,mixed,mixed) r3.xyzw, vThreadID.x, l(28), t0.xyzw
mad r3.x, r2.x, r1.x, r3.x
itof r1.x, r1.y
ld_structured_indexable(structured_buffer, stride=84)(mixed,mixed,mixed,mixed) r1.y, vThreadID.x, l(76), t0.xxxx
mad r3.yz, r2.yyzy, r1.yyyy, r3.yyzy
mad r2.xyz, r3.xyzx, r1.yyyy, r0.yzwy
store_structured u0.xyz, vThreadID.x, l(0), r2.xyzx
ld_structured_indexable(structured_buffer, stride=84)(mixed,mixed,mixed,mixed) r0.w, vThreadID.x, l(68), t0.xxxx
add r4.z, -r1.y, r0.w
mul r5.z, r0.w, l(0.500000)
ge r0.w, l(0.000000), r4.z
movc r0.z, r0.w, l(-1.000000), r1.x
ld_structured_indexable(structured_buffer, stride=84)(mixed,mixed,mixed,mixed) r1.xzw, vThreadID.x, l(16), t0.xxyz
mov r0.y, r1.x
store_structured u0.xyz, vThreadID.x, l(24), r0.xyzx
ftoi r0.y, r0.z
store_structured u1.x, vThreadID.x, l(80), r0.y
mov r2.w, r0.x
mov r5.xy, l(1.000000,1.000000,0,0)
ld_structured_indexable(structured_buffer, stride=84)(mixed,mixed,mixed,mixed) r0.xyzw, vThreadID.x, l(44), t0.xyzw
mov r5.w, r0.z
store_structured u0.xyzw, vThreadID.x, l(36), r5.xyzw
mov r4.w, r5.z
mov r4.y, r0.w
ld_structured_indexable(structured_buffer, stride=84)(mixed,mixed,mixed,mixed) r4.x, vThreadID.x, l(60), t0.xxxx
store_structured u0.xyz, vThreadID.x, l(52), r4.yxxy
store_structured u1.xyzw, vThreadID.x, l(28), r3.xyzw
store_structured u1.xyzw, vThreadID.x, l(44), r0.xyzw
store_structured u1.xyzw, vThreadID.x, l(0), r2.xyzw
store_structured u1.xyz, vThreadID.x, l(16), r1.xzwx
store_structured u1.xyz, vThreadID.x, l(60), r4.xwzx
store_structured u1.x, vThreadID.x, l(76), r1.y
ret 
// Approximately 36 instruction slots used
